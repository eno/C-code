{\rtf1\ansi\ansicpg1252\cocoartf1265
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red115\green0\blue2;\red16\green121\blue2;\red11\green84\blue83;
\red0\green0\blue117;\red83\green85\blue2;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs26 \cf2 #include\cf0  \cf3 <stdio.h>\cf0 \
\cf2 #include\cf0  \cf3 <stdlib.h>\cf0 \
\cf2 #include\cf0  \cf3 <math.h>\cf0 \
\
\cf2 #define\cf0  RESW \cf4 800\cf0 \
\cf2 #define\cf0  RESH \cf4 800\cf0 \
\
\pard\pardeftab720
\cf5 static\cf0  \cf5 struct\cf0  color \cf6 \{\cf0 \
    \cf5 unsigned\cf0  \cf5 char\cf0  r\cf6 ,\cf0  g\cf6 ,\cf0  b\cf6 ;\cf0 \
\cf6 \}\cf0  output\cf6 [\cf0 RESW\cf6 *\cf0 RESH\cf6 ]\cf0  \cf6 =\cf0  \cf6 \{\};\cf0 \
\
\cf5 static\cf0  \cf5 void\cf0 \
write_out\cf6 ()\cf0 \
\cf6 \{\cf0 \
    printf\cf6 (\cf3 "P6 %d %d %d\\n"\cf6 ,\cf0  RESW\cf6 ,\cf0  RESH\cf6 ,\cf0  \cf4 255\cf6 );\cf0 \
    \cf5 struct\cf0  color \cf6 *\cf0 itr \cf6 =\cf0  output\cf6 ,\cf0  \cf6 *\cf5 end\cf0  \cf6 =\cf0  output \cf6 +\cf0  RESW\cf6 *\cf0 RESH\cf6 ;\cf0 \
    \cf5 while\cf0  \cf6 (\cf0 itr \cf6 <\cf0  \cf5 end\cf6 )\cf0  \cf6 \{\cf0 \
        putchar\cf6 (\cf0 itr\cf6 ->\cf0 r\cf6 );\cf0 \
        putchar\cf6 (\cf0 itr\cf6 ->\cf0 g\cf6 );\cf0 \
        putchar\cf6 (\cf0 itr\cf6 ->\cf0 b\cf6 );\cf0 \
        itr\cf6 ++;\cf0 \
    \cf6 \}\cf0 \
\cf6 \}\cf0 \
\
\pard\pardeftab720
\cf2 #define\cf0  MAX\cf6 (\cf0 a\cf6 ,\cf0  b\cf6 )\cf0  \cf6 (\cf0 a \cf6 >\cf0  b \cf6 ?\cf0  a \cf6 :\cf0  b\cf6 )\cf0 \
\cf2 #define\cf0  MIN\cf6 (\cf0 a\cf6 ,\cf0  b\cf6 )\cf0  \cf6 (\cf0 a \cf6 <\cf0  b \cf6 ?\cf0  a \cf6 :\cf0  b\cf6 )\cf0 \
\
\pard\pardeftab720
\cf5 static\cf0  \cf5 void\cf0 \
put_star\cf6 (\cf5 int\cf0  cx\cf6 ,\cf0  \cf5 int\cf0  cy\cf6 ,\cf0  \cf5 int\cf0  rad\cf6 )\cf0 \
\cf6 \{\cf0 \
    \cf5 int\cf0  x0 \cf6 =\cf0  MAX\cf6 (\cf0 cx\cf6 -\cf0 rad\cf6 ,\cf0  \cf4 0\cf6 );\cf0 \
    \cf5 int\cf0  y0 \cf6 =\cf0  MAX\cf6 (\cf0 cy\cf6 -\cf0 rad\cf6 ,\cf0  \cf4 0\cf6 );\cf0 \
    \cf5 int\cf0  x1 \cf6 =\cf0  MIN\cf6 (\cf0 cx\cf6 +\cf0 rad\cf6 ,\cf0  RESW\cf6 );\cf0 \
    \cf5 int\cf0  y1 \cf6 =\cf0  MIN\cf6 (\cf0 cy\cf6 +\cf0 rad\cf6 ,\cf0  RESH\cf6 );\cf0 \
\
    \cf5 int\cf0  x\cf6 ,\cf0  y\cf6 ;\cf0 \
    \cf5 struct\cf0  color \cf6 *\cf0 itr\cf6 ;\cf0 \
    \cf5 for\cf0  \cf6 (\cf0 y\cf6 =\cf0 y0\cf6 ;\cf0  y\cf6 <\cf0 y1\cf6 ;\cf0  y\cf6 ++)\cf0  \cf6 \{\cf0 \
        itr \cf6 =\cf0  output \cf6 +\cf0  x0 \cf6 +\cf0  y\cf6 *\cf0 RESW\cf6 ;\cf0 \
        \cf5 for\cf0  \cf6 (\cf0 x\cf6 =\cf0 x0\cf6 ;\cf0  x\cf6 <\cf0 x1\cf6 ;\cf0  x\cf6 ++)\cf0  \cf6 \{\cf0 \
\
            \cf5 float\cf0  dx \cf6 =\cf0  cx \cf6 -\cf0  x\cf6 ;\cf0 \
            \cf5 float\cf0  dy \cf6 =\cf0  cy \cf6 -\cf0  y\cf6 ;\cf0 \
            \cf5 float\cf0  dist \cf6 =\cf0  sqrtf\cf6 (\cf0 dx\cf6 *\cf0 dx \cf6 +\cf0  dy\cf6 *\cf0 dy\cf6 )\cf0  \cf6 /\cf0  rad\cf6 ;\cf0 \
\
            dist \cf6 =\cf0  dist \cf6 *\cf0  dist\cf6 ;\cf0 \
\
            \cf5 unsigned\cf0  \cf5 char\cf0  bright\cf6 ;\cf0 \
            \cf5 if\cf0  \cf6 (\cf0 dist \cf6 >\cf0  \cf4 1.0f\cf6 )\cf0  \cf6 \{\cf0 \
                bright \cf6 =\cf0  \cf4 0\cf6 ;\cf0 \
            \cf6 \}\cf0  \cf5 else\cf0  \cf6 \{\cf0 \
                bright \cf6 =\cf0  \cf6 (\cf5 unsigned\cf0  \cf5 char\cf6 )\cf0  \cf6 ((\cf4 1.0f\cf0  \cf6 -\cf0  dist\cf6 )\cf0  \cf6 *\cf0  \cf4 255.0f\cf6 );\cf0 \
            \cf6 \}\cf0 \
\
            itr\cf6 ->\cf0 r \cf6 +=\cf0  bright\cf6 ;\cf0 \
            itr\cf6 ->\cf0 g \cf6 +=\cf0  bright\cf6 ;\cf0 \
            itr\cf6 ->\cf0 b \cf6 +=\cf0  bright\cf6 ;\cf0 \
            itr\cf6 ++;\cf0 \
        \cf6 \}\cf0 \
    \cf6 \}\cf0 \
\cf6 \}\cf0 \
\
\cf5 int\cf0 \
main\cf6 ()\cf0 \
\cf6 \{\cf0 \
    \cf5 int\cf0  i\cf6 ;\cf0 \
    \cf5 for\cf0  \cf6 (\cf0 i\cf6 =\cf4 0\cf6 ;\cf0  i\cf6 <\cf4 512\cf6 ;\cf0 i\cf6 ++)\cf0  \cf6 \{\cf0 \
        put_star\cf6 (\cf0 \
                rand\cf6 ()\cf0  \cf6 %\cf0  RESW\cf6 ,\cf0 \
                rand\cf6 ()\cf0  \cf6 %\cf0  RESW\cf6 ,\cf0 \
                \cf4 3\cf0  \cf6 +\cf0  rand\cf6 ()\cf0  \cf6 %\cf0  \cf4 8\cf6 );\cf0 \
    \cf6 \}\cf0 \
\
    write_out\cf6 ();\cf0 \
    \cf5 return\cf0  \cf4 0\cf6 ;\cf0 \
\cf6 \}}